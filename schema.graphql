# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
}

"Node Interface"
interface Node {
  children: [Node!]!
  id: ID!
  internal: Internal!
  parent: Node
}

type Categories implements Node {
  children: [Node!]!
  description: String
  id: ID!
  internal: Internal!
  name: String
  parent: Node
}

type CategoriesConnection {
  distinct(field: CategoriesFieldsEnum!): [String!]!
  edges: [CategoriesEdge!]!
  group(field: CategoriesFieldsEnum!, limit: Int, skip: Int): [CategoriesGroupConnection!]!
  nodes: [Categories!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type CategoriesEdge {
  next: Categories
  node: Categories!
  previous: Categories
}

type CategoriesGroupConnection {
  edges: [CategoriesEdge!]!
  field: String!
  fieldValue: String
  nodes: [Categories!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type Directory implements Node {
  absolutePath: String!
  accessTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atimeMs: Float!
  base: String!
  birthTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason : "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason : "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  changeTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  children: [Node!]!
  ctime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  ctimeMs: Float!
  dev: Int!
  dir: String!
  ext: String!
  extension: String!
  gid: Int!
  id: ID!
  ino: Float!
  internal: Internal!
  mode: Int!
  modifiedTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtimeMs: Float!
  name: String!
  nlink: Int!
  parent: Node
  prettySize: String!
  rdev: Int!
  relativeDirectory: String!
  relativePath: String!
  root: String!
  size: Int!
  sourceInstanceName: String!
  uid: Int!
}

type DirectoryConnection {
  distinct(field: DirectoryFieldsEnum!): [String!]!
  edges: [DirectoryEdge!]!
  group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type DirectoryEdge {
  next: Directory
  node: Directory!
  previous: Directory
}

type DirectoryGroupConnection {
  edges: [DirectoryEdge!]!
  field: String!
  fieldValue: String
  nodes: [Directory!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type File implements Node {
  absolutePath: String!
  accessTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atimeMs: Float!
  base: String!
  birthTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason : "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason : "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  changeTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  childCategories: Categories
  childImageSharp: ImageSharp
  childMdx: Mdx
  children: [Node!]!
  ctime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  ctimeMs: Float!
  dev: Int!
  dir: String!
  ext: String!
  extension: String!
  gid: Int!
  id: ID!
  ino: Float!
  internal: Internal!
  mode: Int!
  modifiedTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtimeMs: Float!
  name: String!
  nlink: Int!
  parent: Node
  prettySize: String!
  "Copy file to static directory and return public url to it"
  publicURL: String
  rdev: Int!
  relativeDirectory: String!
  relativePath: String!
  root: String!
  size: Int!
  sourceInstanceName: String!
  uid: Int!
}

type FileConnection {
  distinct(field: FileFieldsEnum!): [String!]!
  edges: [FileEdge!]!
  group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type FileEdge {
  next: File
  node: File!
  previous: File
}

type FileGroupConnection {
  edges: [FileEdge!]!
  field: String!
  fieldValue: String
  nodes: [File!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImageSharp implements Node {
  children: [Node!]!
  fixed(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = NO_CHANGE, toFormatBase64: ImageFormat = NO_CHANGE, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpFixed
  fluid(
    background: String = "rgba(0,0,0,1)",
    base64Width: Int,
    cropFocus: ImageCropFocus = ATTENTION,
    duotone: DuotoneGradient,
    fit: ImageFit = COVER,
    grayscale: Boolean = false,
    jpegProgressive: Boolean = true,
    jpegQuality: Int,
    maxHeight: Int,
    maxWidth: Int,
    pngCompressionSpeed: Int = 4,
    pngQuality: Int,
    quality: Int,
    rotate: Int = 0,
    sizes: String = "",
    "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
    srcSetBreakpoints: [Int] = [],
    toFormat: ImageFormat = NO_CHANGE,
    toFormatBase64: ImageFormat = NO_CHANGE,
    traceSVG: Potrace,
    trim: Float = 0.0,
    webpQuality: Int
  ): ImageSharpFluid
  id: ID!
  internal: Internal!
  original: ImageSharpOriginal
  parent: Node
  resize(background: String = "rgba(0,0,0,1)", base64: Boolean = false, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = NO_CHANGE, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpResize
  resolutions(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = NO_CHANGE, toFormatBase64: ImageFormat = NO_CHANGE, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpResolutions @deprecated(reason : "Resolutions was deprecated in Gatsby v2. It's been renamed to \"fixed\" https://example.com/write-docs-and-fix-this-example-link")
  sizes(
    background: String = "rgba(0,0,0,1)",
    base64Width: Int,
    cropFocus: ImageCropFocus = ATTENTION,
    duotone: DuotoneGradient,
    fit: ImageFit = COVER,
    grayscale: Boolean = false,
    jpegProgressive: Boolean = true,
    jpegQuality: Int,
    maxHeight: Int,
    maxWidth: Int,
    pngCompressionSpeed: Int = 4,
    pngQuality: Int,
    quality: Int,
    rotate: Int = 0,
    sizes: String = "",
    "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
    srcSetBreakpoints: [Int] = [],
    toFormat: ImageFormat = NO_CHANGE,
    toFormatBase64: ImageFormat = NO_CHANGE,
    traceSVG: Potrace,
    trim: Float = 0.0,
    webpQuality: Int
  ): ImageSharpSizes @deprecated(reason : "Sizes was deprecated in Gatsby v2. It's been renamed to \"fluid\" https://example.com/write-docs-and-fix-this-example-link")
}

type ImageSharpConnection {
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  edges: [ImageSharpEdge!]!
  group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImageSharpEdge {
  next: ImageSharp
  node: ImageSharp!
  previous: ImageSharp
}

type ImageSharpFixed {
  aspectRatio: Float
  base64: String
  height: Float!
  originalName: String
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
  width: Float!
}

type ImageSharpFluid {
  aspectRatio: Float!
  base64: String
  originalImg: String
  originalName: String
  presentationHeight: Int!
  presentationWidth: Int!
  sizes: String!
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
}

type ImageSharpGroupConnection {
  edges: [ImageSharpEdge!]!
  field: String!
  fieldValue: String
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImageSharpOriginal {
  height: Float
  src: String
  width: Float
}

type ImageSharpResize {
  aspectRatio: Float
  height: Int
  originalName: String
  src: String
  tracedSVG: String
  width: Int
}

type ImageSharpResolutions {
  aspectRatio: Float
  base64: String
  height: Float!
  originalName: String
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
  width: Float!
}

type ImageSharpSizes {
  aspectRatio: Float!
  base64: String
  originalImg: String
  originalName: String
  presentationHeight: Int!
  presentationWidth: Int!
  sizes: String!
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
}

type Internal {
  content: String
  contentDigest: String!
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
}

type MarkdownHeading {
  depth: Int
  id: String
  value: String
}

type MarkdownRemark implements Node {
  children: [Node!]!
  excerpt(format: MarkdownExcerptFormats = PLAIN, pruneLength: Int = 140, truncate: Boolean = false): String
  excerptAst(pruneLength: Int = 140, truncate: Boolean = false): JSON
  headings(depth: MarkdownHeadingLevels): [MarkdownHeading]
  html: String
  htmlAst: JSON
  id: ID!
  internal: Internal!
  parent: Node
  tableOfContents(absolute: Boolean = true, heading: String, maxDepth: Int, pathToSlugField: String = "fields.slug"): String
  timeToRead: Int
  wordCount: MarkdownWordCount
}

type MarkdownRemarkConnection {
  distinct(field: MarkdownRemarkFieldsEnum!): [String!]!
  edges: [MarkdownRemarkEdge!]!
  group(field: MarkdownRemarkFieldsEnum!, limit: Int, skip: Int): [MarkdownRemarkGroupConnection!]!
  nodes: [MarkdownRemark!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type MarkdownRemarkEdge {
  next: MarkdownRemark
  node: MarkdownRemark!
  previous: MarkdownRemark
}

type MarkdownRemarkGroupConnection {
  edges: [MarkdownRemarkEdge!]!
  field: String!
  fieldValue: String
  nodes: [MarkdownRemark!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type MarkdownWordCount {
  paragraphs: Int
  sentences: Int
  words: Int
}

type Mdx implements Node {
  body: String!
  children: [Node!]!
  excerpt(pruneLength: Int = 140, truncate: Boolean = false): String!
  fileAbsolutePath: String!
  frontmatter: MdxFrontmatter
  headings(depth: HeadingsMdx): [MdxHeadingMdx]
  html: String
  id: ID!
  internal: Internal!
  mdxAST: JSON
  parent: Node
  rawBody: String!
  tableOfContents(maxDepth: Int): JSON
  timeToRead: Int
  wordCount: MdxWordCount
}

type MdxConnection {
  distinct(field: MdxFieldsEnum!): [String!]!
  edges: [MdxEdge!]!
  group(field: MdxFieldsEnum!, limit: Int, skip: Int): [MdxGroupConnection!]!
  nodes: [Mdx!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type MdxEdge {
  next: Mdx
  node: Mdx!
  previous: Mdx
}

type MdxFrontmatter {
  categories: [String]
  created(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  excerpt: String
  featuredImage: File
  path: String
  title: String!
  updated(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
}

type MdxGroupConnection {
  edges: [MdxEdge!]!
  field: String!
  fieldValue: String
  nodes: [Mdx!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type MdxHeadingMdx {
  depth: Int
  value: String
}

type MdxWordCount {
  paragraphs: Int
  sentences: Int
  words: Int
}

type PageInfo {
  currentPage: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
  totalCount: Int!
}

type Query {
  allCategories(filter: CategoriesFilterInput, limit: Int, skip: Int, sort: CategoriesSortInput): CategoriesConnection!
  allDirectory(filter: DirectoryFilterInput, limit: Int, skip: Int, sort: DirectorySortInput): DirectoryConnection!
  allFile(filter: FileFilterInput, limit: Int, skip: Int, sort: FileSortInput): FileConnection!
  allImageSharp(filter: ImageSharpFilterInput, limit: Int, skip: Int, sort: ImageSharpSortInput): ImageSharpConnection!
  allMarkdownRemark(filter: MarkdownRemarkFilterInput, limit: Int, skip: Int, sort: MarkdownRemarkSortInput): MarkdownRemarkConnection!
  allMdx(filter: MdxFilterInput, limit: Int, skip: Int, sort: MdxSortInput): MdxConnection!
  allSite(filter: SiteFilterInput, limit: Int, skip: Int, sort: SiteSortInput): SiteConnection!
  allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, limit: Int, skip: Int, sort: SiteBuildMetadataSortInput): SiteBuildMetadataConnection!
  allSitePage(filter: SitePageFilterInput, limit: Int, skip: Int, sort: SitePageSortInput): SitePageConnection!
  allSitePlugin(filter: SitePluginFilterInput, limit: Int, skip: Int, sort: SitePluginSortInput): SitePluginConnection!
  categories(children: NodeFilterListInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, parent: NodeFilterInput): Categories
  directory(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): Directory
  file(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, childCategories: CategoriesFilterInput, childImageSharp: ImageSharpFilterInput, childMdx: MdxFilterInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): File
  imageSharp(children: NodeFilterListInput, fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, original: ImageSharpOriginalFilterInput, parent: NodeFilterInput, resize: ImageSharpResizeFilterInput, resolutions: ImageSharpResolutionsFilterInput, sizes: ImageSharpSizesFilterInput): ImageSharp
  markdownRemark(children: NodeFilterListInput, excerpt: StringQueryOperatorInput, excerptAst: JSONQueryOperatorInput, headings: MarkdownHeadingFilterListInput, html: StringQueryOperatorInput, htmlAst: JSONQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, tableOfContents: StringQueryOperatorInput, timeToRead: IntQueryOperatorInput, wordCount: MarkdownWordCountFilterInput): MarkdownRemark
  mdx(body: StringQueryOperatorInput, children: NodeFilterListInput, excerpt: StringQueryOperatorInput, fileAbsolutePath: StringQueryOperatorInput, frontmatter: MdxFrontmatterFilterInput, headings: MdxHeadingMdxFilterListInput, html: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, mdxAST: JSONQueryOperatorInput, parent: NodeFilterInput, rawBody: StringQueryOperatorInput, tableOfContents: JSONQueryOperatorInput, timeToRead: IntQueryOperatorInput, wordCount: MdxWordCountFilterInput): Mdx
  site(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, host: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, pathPrefix: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, port: DateQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput): Site
  siteBuildMetadata(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput): SiteBuildMetadata
  sitePage(children: NodeFilterListInput, component: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, componentPath: StringQueryOperatorInput, context: SitePageContextFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, internalComponentName: StringQueryOperatorInput, isCreatedByStatefulCreatePages: BooleanQueryOperatorInput, matchPath: StringQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, pluginCreator: SitePluginFilterInput, pluginCreatorId: StringQueryOperatorInput): SitePage
  sitePlugin(browserAPIs: StringQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, packageJson: SitePluginPackageJsonFilterInput, parent: NodeFilterInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: SitePluginPluginOptionsFilterInput, resolve: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, version: StringQueryOperatorInput): SitePlugin
}

type Site implements Node {
  buildTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  children: [Node!]!
  host: String
  id: ID!
  internal: Internal!
  parent: Node
  pathPrefix: String
  polyfill: Boolean
  port(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  siteMetadata: SiteSiteMetadata
}

type SiteBuildMetadata implements Node {
  buildTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  children: [Node!]!
  id: ID!
  internal: Internal!
  parent: Node
}

type SiteBuildMetadataConnection {
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  edges: [SiteBuildMetadataEdge!]!
  group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SiteBuildMetadataEdge {
  next: SiteBuildMetadata
  node: SiteBuildMetadata!
  previous: SiteBuildMetadata
}

type SiteBuildMetadataGroupConnection {
  edges: [SiteBuildMetadataEdge!]!
  field: String!
  fieldValue: String
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SiteConnection {
  distinct(field: SiteFieldsEnum!): [String!]!
  edges: [SiteEdge!]!
  group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SiteEdge {
  next: Site
  node: Site!
  previous: Site
}

type SiteGroupConnection {
  edges: [SiteEdge!]!
  field: String!
  fieldValue: String
  nodes: [Site!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePage implements Node {
  children: [Node!]!
  component: String!
  componentChunkName: String!
  componentPath: String
  context: SitePageContext
  id: ID!
  internal: Internal!
  internalComponentName: String!
  isCreatedByStatefulCreatePages: Boolean
  matchPath: String
  parent: Node
  path: String!
  pluginCreator: SitePlugin
  pluginCreatorId: String
}

type SitePageConnection {
  distinct(field: SitePageFieldsEnum!): [String!]!
  edges: [SitePageEdge!]!
  group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePageContext {
  category: String
  humanPageNumber: Int
  limit: Int
  nextPagePath: String
  numberOfPages: Int
  page: SitePageContextPage
  pageNumber: Int
  postId: String
  previousPagePath: String
  skip: Int
}

type SitePageContextPage {
  body: String
  frontmatter: SitePageContextPageFrontmatter
}

type SitePageContextPageFrontmatter {
  path: String
  title: String
}

type SitePageEdge {
  next: SitePage
  node: SitePage!
  previous: SitePage
}

type SitePageGroupConnection {
  edges: [SitePageEdge!]!
  field: String!
  fieldValue: String
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePlugin implements Node {
  browserAPIs: [String]
  children: [Node!]!
  id: ID!
  internal: Internal!
  name: String
  nodeAPIs: [String]
  packageJson: SitePluginPackageJson
  parent: Node
  pluginFilepath: String
  pluginOptions: SitePluginPluginOptions
  resolve: String
  ssrAPIs: [String]
  version: String
}

type SitePluginConnection {
  distinct(field: SitePluginFieldsEnum!): [String!]!
  edges: [SitePluginEdge!]!
  group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePluginEdge {
  next: SitePlugin
  node: SitePlugin!
  previous: SitePlugin
}

type SitePluginGroupConnection {
  edges: [SitePluginEdge!]!
  field: String!
  fieldValue: String
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePluginPackageJson {
  dependencies: [SitePluginPackageJsonDependencies]
  description: String
  devDependencies: [SitePluginPackageJsonDevDependencies]
  keywords: [String]
  license: String
  main: String
  name: String
  peerDependencies: [SitePluginPackageJsonPeerDependencies]
  version: String
}

type SitePluginPackageJsonDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonDevDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonPeerDependencies {
  name: String
  version: String
}

type SitePluginPluginOptions {
  checkSupportedExtensions: Boolean
  extensions: [String]
  feeds: [SitePluginPluginOptionsFeeds]
  fonts: [SitePluginPluginOptionsFonts]
  gatsbyRemarkPlugins: [SitePluginPluginOptionsGatsbyRemarkPlugins]
  name: String
  path: String
  pathCheck: Boolean
  plugins: [SitePluginPluginOptionsPlugins]
  query: String
  typeName: String
}

type SitePluginPluginOptionsFeeds {
  output: String
  query: String
  title: String
}

type SitePluginPluginOptionsFonts {
  family: String
  variants: [String]
}

type SitePluginPluginOptionsGatsbyRemarkPlugins {
  options: SitePluginPluginOptionsGatsbyRemarkPluginsOptions
  resolve: String
}

type SitePluginPluginOptionsGatsbyRemarkPluginsOptions {
  backgroundColor: String
  disableBgImage: Boolean
  disableBgImageOnAlpha: Boolean
  linkImagesToOriginal: Boolean
  loading: String
  markdownCaptions: Boolean
  maxWidth: Int
  pathPrefix: String
  showCaptions: Boolean
  tracedSVG: Boolean
  withWebp: Boolean
  wrapperStyle: String
}

type SitePluginPluginOptionsPlugins {
  browserAPIs: [String]
  id: String
  name: String
  pluginFilepath: String
  resolve: String
  version: String
}

type SiteSiteMetadata {
  author: SiteSiteMetadataAuthor
  description: String
  footerMenu: [SiteSiteMetadataFooterMenu]
  menu: [SiteSiteMetadataMenu]
  search: Boolean
  siteUrl: String
  title: String
}

type SiteSiteMetadataAuthor {
  description: String
  name: String
  social: SiteSiteMetadataAuthorSocial
}

type SiteSiteMetadataAuthorSocial {
  facebook: String
  github: String
  instagram: String
  linkedin: String
  twitch: String
  twitter: String
  youtube: String
}

type SiteSiteMetadataFooterMenu {
  name: String
  path: String
}

type SiteSiteMetadataMenu {
  name: String
  path: String
}

enum CategoriesFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  description
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
}

enum DirectoryFieldsEnum {
  absolutePath
  accessTime
  atime
  atimeMs
  base
  birthTime
  birthtime
  birthtimeMs
  blksize
  blocks
  changeTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  ctime
  ctimeMs
  dev
  dir
  ext
  extension
  gid
  id
  ino
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mode
  modifiedTime
  mtime
  mtimeMs
  name
  nlink
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  prettySize
  rdev
  relativeDirectory
  relativePath
  root
  size
  sourceInstanceName
  uid
}

enum FileFieldsEnum {
  absolutePath
  accessTime
  atime
  atimeMs
  base
  birthTime
  birthtime
  birthtimeMs
  blksize
  blocks
  changeTime
  childCategories___children
  childCategories___children___children
  childCategories___children___children___children
  childCategories___children___children___id
  childCategories___children___id
  childCategories___children___internal___content
  childCategories___children___internal___contentDigest
  childCategories___children___internal___description
  childCategories___children___internal___fieldOwners
  childCategories___children___internal___ignoreType
  childCategories___children___internal___mediaType
  childCategories___children___internal___owner
  childCategories___children___internal___type
  childCategories___children___parent___children
  childCategories___children___parent___id
  childCategories___description
  childCategories___id
  childCategories___internal___content
  childCategories___internal___contentDigest
  childCategories___internal___description
  childCategories___internal___fieldOwners
  childCategories___internal___ignoreType
  childCategories___internal___mediaType
  childCategories___internal___owner
  childCategories___internal___type
  childCategories___name
  childCategories___parent___children
  childCategories___parent___children___children
  childCategories___parent___children___id
  childCategories___parent___id
  childCategories___parent___internal___content
  childCategories___parent___internal___contentDigest
  childCategories___parent___internal___description
  childCategories___parent___internal___fieldOwners
  childCategories___parent___internal___ignoreType
  childCategories___parent___internal___mediaType
  childCategories___parent___internal___owner
  childCategories___parent___internal___type
  childCategories___parent___parent___children
  childCategories___parent___parent___id
  childImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___body
  childMdx___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___excerpt @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___fileAbsolutePath
  childMdx___frontmatter___categories
  childMdx___frontmatter___created
  childMdx___frontmatter___excerpt
  childMdx___frontmatter___featuredImage___absolutePath
  childMdx___frontmatter___featuredImage___accessTime
  childMdx___frontmatter___featuredImage___atime
  childMdx___frontmatter___featuredImage___atimeMs
  childMdx___frontmatter___featuredImage___base
  childMdx___frontmatter___featuredImage___birthTime
  childMdx___frontmatter___featuredImage___birthtime
  childMdx___frontmatter___featuredImage___birthtimeMs
  childMdx___frontmatter___featuredImage___blksize
  childMdx___frontmatter___featuredImage___blocks
  childMdx___frontmatter___featuredImage___changeTime
  childMdx___frontmatter___featuredImage___children
  childMdx___frontmatter___featuredImage___ctime
  childMdx___frontmatter___featuredImage___ctimeMs
  childMdx___frontmatter___featuredImage___dev
  childMdx___frontmatter___featuredImage___dir
  childMdx___frontmatter___featuredImage___ext
  childMdx___frontmatter___featuredImage___extension
  childMdx___frontmatter___featuredImage___gid
  childMdx___frontmatter___featuredImage___id
  childMdx___frontmatter___featuredImage___ino
  childMdx___frontmatter___featuredImage___mode
  childMdx___frontmatter___featuredImage___modifiedTime
  childMdx___frontmatter___featuredImage___mtime
  childMdx___frontmatter___featuredImage___mtimeMs
  childMdx___frontmatter___featuredImage___name
  childMdx___frontmatter___featuredImage___nlink
  childMdx___frontmatter___featuredImage___prettySize
  childMdx___frontmatter___featuredImage___publicURL
  childMdx___frontmatter___featuredImage___rdev
  childMdx___frontmatter___featuredImage___relativeDirectory
  childMdx___frontmatter___featuredImage___relativePath
  childMdx___frontmatter___featuredImage___root
  childMdx___frontmatter___featuredImage___size
  childMdx___frontmatter___featuredImage___sourceInstanceName
  childMdx___frontmatter___featuredImage___uid
  childMdx___frontmatter___path
  childMdx___frontmatter___title
  childMdx___frontmatter___updated
  childMdx___headings @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___headings___depth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___headings___value @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___html @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___mdxAST @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___rawBody
  childMdx___tableOfContents @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___timeToRead @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___wordCount___paragraphs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___wordCount___sentences @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___wordCount___words @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  ctime
  ctimeMs
  dev
  dir
  ext
  extension
  gid
  id
  ino
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mode
  modifiedTime
  mtime
  mtimeMs
  name
  nlink
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  prettySize
  publicURL
  rdev
  relativeDirectory
  relativePath
  root
  size
  sourceInstanceName
  uid
}

enum HeadingsMdx {
  h1
  h2
  h3
  h4
  h5
  h6
}

enum ImageCropFocus {
  ATTENTION
  CENTER
  EAST
  ENTROPY
  NORTH
  NORTHEAST
  NORTHWEST
  SOUTH
  SOUTHEAST
  SOUTHWEST
  WEST
}

enum ImageFit {
  CONTAIN
  COVER
  FILL
  INSIDE
  OUTSIDE
}

enum ImageFormat {
  JPG
  NO_CHANGE
  PNG
  WEBP
}

enum ImageSharpFieldsEnum {
  children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
}

enum MarkdownExcerptFormats {
  HTML
  MARKDOWN
  PLAIN
}

enum MarkdownHeadingLevels {
  h1
  h2
  h3
  h4
  h5
  h6
}

enum MarkdownRemarkFieldsEnum {
  children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  excerpt @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  excerptAst @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  headings @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  headings___depth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  headings___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  headings___value @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  html
  htmlAst
  id
  internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  tableOfContents @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  timeToRead @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  wordCount___paragraphs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  wordCount___sentences @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  wordCount___words @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
}

enum MdxFieldsEnum {
  body
  children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  excerpt @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fileAbsolutePath
  frontmatter___categories
  frontmatter___created
  frontmatter___excerpt
  frontmatter___featuredImage___absolutePath
  frontmatter___featuredImage___accessTime
  frontmatter___featuredImage___atime
  frontmatter___featuredImage___atimeMs
  frontmatter___featuredImage___base
  frontmatter___featuredImage___birthTime
  frontmatter___featuredImage___birthtime
  frontmatter___featuredImage___birthtimeMs
  frontmatter___featuredImage___blksize
  frontmatter___featuredImage___blocks
  frontmatter___featuredImage___changeTime
  frontmatter___featuredImage___childCategories___children
  frontmatter___featuredImage___childCategories___description
  frontmatter___featuredImage___childCategories___id
  frontmatter___featuredImage___childCategories___name
  frontmatter___featuredImage___childImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  frontmatter___featuredImage___childImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  frontmatter___featuredImage___childMdx___body
  frontmatter___featuredImage___childMdx___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  frontmatter___featuredImage___childMdx___excerpt @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  frontmatter___featuredImage___childMdx___fileAbsolutePath
  frontmatter___featuredImage___childMdx___headings @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  frontmatter___featuredImage___childMdx___html @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  frontmatter___featuredImage___childMdx___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  frontmatter___featuredImage___childMdx___mdxAST @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  frontmatter___featuredImage___childMdx___rawBody
  frontmatter___featuredImage___childMdx___tableOfContents @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  frontmatter___featuredImage___childMdx___timeToRead @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  frontmatter___featuredImage___children
  frontmatter___featuredImage___children___children
  frontmatter___featuredImage___children___id
  frontmatter___featuredImage___ctime
  frontmatter___featuredImage___ctimeMs
  frontmatter___featuredImage___dev
  frontmatter___featuredImage___dir
  frontmatter___featuredImage___ext
  frontmatter___featuredImage___extension
  frontmatter___featuredImage___gid
  frontmatter___featuredImage___id
  frontmatter___featuredImage___ino
  frontmatter___featuredImage___internal___content
  frontmatter___featuredImage___internal___contentDigest
  frontmatter___featuredImage___internal___description
  frontmatter___featuredImage___internal___fieldOwners
  frontmatter___featuredImage___internal___ignoreType
  frontmatter___featuredImage___internal___mediaType
  frontmatter___featuredImage___internal___owner
  frontmatter___featuredImage___internal___type
  frontmatter___featuredImage___mode
  frontmatter___featuredImage___modifiedTime
  frontmatter___featuredImage___mtime
  frontmatter___featuredImage___mtimeMs
  frontmatter___featuredImage___name
  frontmatter___featuredImage___nlink
  frontmatter___featuredImage___parent___children
  frontmatter___featuredImage___parent___id
  frontmatter___featuredImage___prettySize
  frontmatter___featuredImage___publicURL
  frontmatter___featuredImage___rdev
  frontmatter___featuredImage___relativeDirectory
  frontmatter___featuredImage___relativePath
  frontmatter___featuredImage___root
  frontmatter___featuredImage___size
  frontmatter___featuredImage___sourceInstanceName
  frontmatter___featuredImage___uid
  frontmatter___path
  frontmatter___title
  frontmatter___updated
  headings @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  headings___depth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  headings___value @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  html @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mdxAST @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  rawBody
  tableOfContents @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  timeToRead @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  wordCount___paragraphs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  wordCount___sentences @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  wordCount___words @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_LEFT
  TURNPOLICY_MAJORITY
  TURNPOLICY_MINORITY
  TURNPOLICY_RIGHT
  TURNPOLICY_WHITE
}

enum SiteBuildMetadataFieldsEnum {
  buildTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
}

enum SiteFieldsEnum {
  buildTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  host
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pathPrefix
  polyfill
  port
  siteMetadata___author___description
  siteMetadata___author___name
  siteMetadata___author___social___facebook
  siteMetadata___author___social___github
  siteMetadata___author___social___instagram
  siteMetadata___author___social___linkedin
  siteMetadata___author___social___twitch
  siteMetadata___author___social___twitter
  siteMetadata___author___social___youtube
  siteMetadata___description
  siteMetadata___footerMenu
  siteMetadata___footerMenu___name
  siteMetadata___footerMenu___path
  siteMetadata___menu
  siteMetadata___menu___name
  siteMetadata___menu___path
  siteMetadata___search
  siteMetadata___siteUrl
  siteMetadata___title
}

enum SitePageFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  component
  componentChunkName
  componentPath
  context___category
  context___humanPageNumber
  context___limit
  context___nextPagePath
  context___numberOfPages
  context___pageNumber
  context___page___body
  context___page___frontmatter___path
  context___page___frontmatter___title
  context___postId
  context___previousPagePath
  context___skip
  id
  internalComponentName
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  isCreatedByStatefulCreatePages
  matchPath
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  path
  pluginCreatorId
  pluginCreator___browserAPIs
  pluginCreator___children
  pluginCreator___children___children
  pluginCreator___children___children___children
  pluginCreator___children___children___id
  pluginCreator___children___id
  pluginCreator___children___internal___content
  pluginCreator___children___internal___contentDigest
  pluginCreator___children___internal___description
  pluginCreator___children___internal___fieldOwners
  pluginCreator___children___internal___ignoreType
  pluginCreator___children___internal___mediaType
  pluginCreator___children___internal___owner
  pluginCreator___children___internal___type
  pluginCreator___children___parent___children
  pluginCreator___children___parent___id
  pluginCreator___id
  pluginCreator___internal___content
  pluginCreator___internal___contentDigest
  pluginCreator___internal___description
  pluginCreator___internal___fieldOwners
  pluginCreator___internal___ignoreType
  pluginCreator___internal___mediaType
  pluginCreator___internal___owner
  pluginCreator___internal___type
  pluginCreator___name
  pluginCreator___nodeAPIs
  pluginCreator___packageJson___dependencies
  pluginCreator___packageJson___dependencies___name
  pluginCreator___packageJson___dependencies___version
  pluginCreator___packageJson___description
  pluginCreator___packageJson___devDependencies
  pluginCreator___packageJson___devDependencies___name
  pluginCreator___packageJson___devDependencies___version
  pluginCreator___packageJson___keywords
  pluginCreator___packageJson___license
  pluginCreator___packageJson___main
  pluginCreator___packageJson___name
  pluginCreator___packageJson___peerDependencies
  pluginCreator___packageJson___peerDependencies___name
  pluginCreator___packageJson___peerDependencies___version
  pluginCreator___packageJson___version
  pluginCreator___parent___children
  pluginCreator___parent___children___children
  pluginCreator___parent___children___id
  pluginCreator___parent___id
  pluginCreator___parent___internal___content
  pluginCreator___parent___internal___contentDigest
  pluginCreator___parent___internal___description
  pluginCreator___parent___internal___fieldOwners
  pluginCreator___parent___internal___ignoreType
  pluginCreator___parent___internal___mediaType
  pluginCreator___parent___internal___owner
  pluginCreator___parent___internal___type
  pluginCreator___parent___parent___children
  pluginCreator___parent___parent___id
  pluginCreator___pluginFilepath
  pluginCreator___pluginOptions___checkSupportedExtensions
  pluginCreator___pluginOptions___extensions
  pluginCreator___pluginOptions___feeds
  pluginCreator___pluginOptions___feeds___output
  pluginCreator___pluginOptions___feeds___query
  pluginCreator___pluginOptions___feeds___title
  pluginCreator___pluginOptions___fonts
  pluginCreator___pluginOptions___fonts___family
  pluginCreator___pluginOptions___fonts___variants
  pluginCreator___pluginOptions___gatsbyRemarkPlugins
  pluginCreator___pluginOptions___gatsbyRemarkPlugins___resolve
  pluginCreator___pluginOptions___name
  pluginCreator___pluginOptions___path
  pluginCreator___pluginOptions___pathCheck
  pluginCreator___pluginOptions___plugins
  pluginCreator___pluginOptions___plugins___browserAPIs
  pluginCreator___pluginOptions___plugins___id
  pluginCreator___pluginOptions___plugins___name
  pluginCreator___pluginOptions___plugins___pluginFilepath
  pluginCreator___pluginOptions___plugins___resolve
  pluginCreator___pluginOptions___plugins___version
  pluginCreator___pluginOptions___query
  pluginCreator___pluginOptions___typeName
  pluginCreator___resolve
  pluginCreator___ssrAPIs
  pluginCreator___version
}

enum SitePluginFieldsEnum {
  browserAPIs
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  nodeAPIs
  packageJson___dependencies
  packageJson___dependencies___name
  packageJson___dependencies___version
  packageJson___description
  packageJson___devDependencies
  packageJson___devDependencies___name
  packageJson___devDependencies___version
  packageJson___keywords
  packageJson___license
  packageJson___main
  packageJson___name
  packageJson___peerDependencies
  packageJson___peerDependencies___name
  packageJson___peerDependencies___version
  packageJson___version
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pluginFilepath
  pluginOptions___checkSupportedExtensions
  pluginOptions___extensions
  pluginOptions___feeds
  pluginOptions___feeds___output
  pluginOptions___feeds___query
  pluginOptions___feeds___title
  pluginOptions___fonts
  pluginOptions___fonts___family
  pluginOptions___fonts___variants
  pluginOptions___gatsbyRemarkPlugins
  pluginOptions___gatsbyRemarkPlugins___options___backgroundColor
  pluginOptions___gatsbyRemarkPlugins___options___disableBgImage
  pluginOptions___gatsbyRemarkPlugins___options___disableBgImageOnAlpha
  pluginOptions___gatsbyRemarkPlugins___options___linkImagesToOriginal
  pluginOptions___gatsbyRemarkPlugins___options___loading
  pluginOptions___gatsbyRemarkPlugins___options___markdownCaptions
  pluginOptions___gatsbyRemarkPlugins___options___maxWidth
  pluginOptions___gatsbyRemarkPlugins___options___pathPrefix
  pluginOptions___gatsbyRemarkPlugins___options___showCaptions
  pluginOptions___gatsbyRemarkPlugins___options___tracedSVG
  pluginOptions___gatsbyRemarkPlugins___options___withWebp
  pluginOptions___gatsbyRemarkPlugins___options___wrapperStyle
  pluginOptions___gatsbyRemarkPlugins___resolve
  pluginOptions___name
  pluginOptions___path
  pluginOptions___pathCheck
  pluginOptions___plugins
  pluginOptions___plugins___browserAPIs
  pluginOptions___plugins___id
  pluginOptions___plugins___name
  pluginOptions___plugins___pluginFilepath
  pluginOptions___plugins___resolve
  pluginOptions___plugins___version
  pluginOptions___query
  pluginOptions___typeName
  resolve
  ssrAPIs
  version
}

enum SortOrderEnum {
  ASC
  DESC
}

input BooleanQueryOperatorInput {
  eq: Boolean
  in: [Boolean]
  ne: Boolean
  nin: [Boolean]
}

input CategoriesFilterInput {
  children: NodeFilterListInput
  description: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  parent: NodeFilterInput
}

input CategoriesSortInput {
  fields: [CategoriesFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input DateQueryOperatorInput {
  eq: Date
  gt: Date
  gte: Date
  in: [Date]
  lt: Date
  lte: Date
  ne: Date
  nin: [Date]
}

input DirectoryFilterInput {
  absolutePath: StringQueryOperatorInput
  accessTime: DateQueryOperatorInput
  atime: DateQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  base: StringQueryOperatorInput
  birthTime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  changeTime: DateQueryOperatorInput
  children: NodeFilterListInput
  ctime: DateQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  dev: IntQueryOperatorInput
  dir: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  gid: IntQueryOperatorInput
  id: StringQueryOperatorInput
  ino: FloatQueryOperatorInput
  internal: InternalFilterInput
  mode: IntQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  name: StringQueryOperatorInput
  nlink: IntQueryOperatorInput
  parent: NodeFilterInput
  prettySize: StringQueryOperatorInput
  rdev: IntQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  root: StringQueryOperatorInput
  size: IntQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  uid: IntQueryOperatorInput
}

input DirectorySortInput {
  fields: [DirectoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
  highlight: String!
  opacity: Int
  shadow: String!
}

input FileFilterInput {
  absolutePath: StringQueryOperatorInput
  accessTime: DateQueryOperatorInput
  atime: DateQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  base: StringQueryOperatorInput
  birthTime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  changeTime: DateQueryOperatorInput
  childCategories: CategoriesFilterInput
  childImageSharp: ImageSharpFilterInput
  childMdx: MdxFilterInput
  children: NodeFilterListInput
  ctime: DateQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  dev: IntQueryOperatorInput
  dir: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  gid: IntQueryOperatorInput
  id: StringQueryOperatorInput
  ino: FloatQueryOperatorInput
  internal: InternalFilterInput
  mode: IntQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  name: StringQueryOperatorInput
  nlink: IntQueryOperatorInput
  parent: NodeFilterInput
  prettySize: StringQueryOperatorInput
  publicURL: StringQueryOperatorInput
  rdev: IntQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  root: StringQueryOperatorInput
  size: IntQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  uid: IntQueryOperatorInput
}

input FileSortInput {
  fields: [FileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
  eq: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input ImageSharpFilterInput {
  children: NodeFilterListInput
  fixed: ImageSharpFixedFilterInput
  fluid: ImageSharpFluidFilterInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  original: ImageSharpOriginalFilterInput
  parent: NodeFilterInput
  resize: ImageSharpResizeFilterInput
  resolutions: ImageSharpResolutionsFilterInput
  sizes: ImageSharpSizesFilterInput
}

input ImageSharpFixedFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  height: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input ImageSharpFluidFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  sizes: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
}

input ImageSharpOriginalFilterInput {
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input ImageSharpResizeFilterInput {
  aspectRatio: FloatQueryOperatorInput
  height: IntQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: IntQueryOperatorInput
}

input ImageSharpResolutionsFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  height: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input ImageSharpSizesFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  sizes: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
}

input ImageSharpSortInput {
  fields: [ImageSharpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input IntQueryOperatorInput {
  eq: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  ne: Int
  nin: [Int]
}

input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input JSONQueryOperatorInput {
  eq: JSON
  glob: JSON
  in: [JSON]
  ne: JSON
  nin: [JSON]
  regex: JSON
}

input MarkdownHeadingFilterInput {
  depth: IntQueryOperatorInput
  id: StringQueryOperatorInput
  value: StringQueryOperatorInput
}

input MarkdownHeadingFilterListInput {
  elemMatch: MarkdownHeadingFilterInput
}

input MarkdownRemarkFilterInput {
  children: NodeFilterListInput
  excerpt: StringQueryOperatorInput
  excerptAst: JSONQueryOperatorInput
  headings: MarkdownHeadingFilterListInput
  html: StringQueryOperatorInput
  htmlAst: JSONQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
  tableOfContents: StringQueryOperatorInput
  timeToRead: IntQueryOperatorInput
  wordCount: MarkdownWordCountFilterInput
}

input MarkdownRemarkSortInput {
  fields: [MarkdownRemarkFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input MarkdownWordCountFilterInput {
  paragraphs: IntQueryOperatorInput
  sentences: IntQueryOperatorInput
  words: IntQueryOperatorInput
}

input MdxFilterInput {
  body: StringQueryOperatorInput
  children: NodeFilterListInput
  excerpt: StringQueryOperatorInput
  fileAbsolutePath: StringQueryOperatorInput
  frontmatter: MdxFrontmatterFilterInput
  headings: MdxHeadingMdxFilterListInput
  html: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  mdxAST: JSONQueryOperatorInput
  parent: NodeFilterInput
  rawBody: StringQueryOperatorInput
  tableOfContents: JSONQueryOperatorInput
  timeToRead: IntQueryOperatorInput
  wordCount: MdxWordCountFilterInput
}

input MdxFrontmatterFilterInput {
  categories: StringQueryOperatorInput
  created: DateQueryOperatorInput
  excerpt: StringQueryOperatorInput
  featuredImage: FileFilterInput
  path: StringQueryOperatorInput
  title: StringQueryOperatorInput
  updated: DateQueryOperatorInput
}

input MdxHeadingMdxFilterInput {
  depth: IntQueryOperatorInput
  value: StringQueryOperatorInput
}

input MdxHeadingMdxFilterListInput {
  elemMatch: MdxHeadingMdxFilterInput
}

input MdxSortInput {
  fields: [MdxFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input MdxWordCountFilterInput {
  paragraphs: IntQueryOperatorInput
  sentences: IntQueryOperatorInput
  words: IntQueryOperatorInput
}

input NodeFilterInput {
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
}

input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

input Potrace {
  alphaMax: Float
  background: String
  blackOnWhite: Boolean
  color: String
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  turdSize: Float
  turnPolicy: PotraceTurnPolicy
}

input SiteBuildMetadataFilterInput {
  buildTime: DateQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
}

input SiteBuildMetadataSortInput {
  fields: [SiteBuildMetadataFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteFilterInput {
  buildTime: DateQueryOperatorInput
  children: NodeFilterListInput
  host: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
  pathPrefix: StringQueryOperatorInput
  polyfill: BooleanQueryOperatorInput
  port: DateQueryOperatorInput
  siteMetadata: SiteSiteMetadataFilterInput
}

input SitePageContextFilterInput {
  category: StringQueryOperatorInput
  humanPageNumber: IntQueryOperatorInput
  limit: IntQueryOperatorInput
  nextPagePath: StringQueryOperatorInput
  numberOfPages: IntQueryOperatorInput
  page: SitePageContextPageFilterInput
  pageNumber: IntQueryOperatorInput
  postId: StringQueryOperatorInput
  previousPagePath: StringQueryOperatorInput
  skip: IntQueryOperatorInput
}

input SitePageContextPageFilterInput {
  body: StringQueryOperatorInput
  frontmatter: SitePageContextPageFrontmatterFilterInput
}

input SitePageContextPageFrontmatterFilterInput {
  path: StringQueryOperatorInput
  title: StringQueryOperatorInput
}

input SitePageFilterInput {
  children: NodeFilterListInput
  component: StringQueryOperatorInput
  componentChunkName: StringQueryOperatorInput
  componentPath: StringQueryOperatorInput
  context: SitePageContextFilterInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  internalComponentName: StringQueryOperatorInput
  isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
  matchPath: StringQueryOperatorInput
  parent: NodeFilterInput
  path: StringQueryOperatorInput
  pluginCreator: SitePluginFilterInput
  pluginCreatorId: StringQueryOperatorInput
}

input SitePageSortInput {
  fields: [SitePageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
  browserAPIs: StringQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  nodeAPIs: StringQueryOperatorInput
  packageJson: SitePluginPackageJsonFilterInput
  parent: NodeFilterInput
  pluginFilepath: StringQueryOperatorInput
  pluginOptions: SitePluginPluginOptionsFilterInput
  resolve: StringQueryOperatorInput
  ssrAPIs: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDependenciesFilterInput
}

input SitePluginPackageJsonDevDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDevDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDevDependenciesFilterInput
}

input SitePluginPackageJsonFilterInput {
  dependencies: SitePluginPackageJsonDependenciesFilterListInput
  description: StringQueryOperatorInput
  devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput
  keywords: StringQueryOperatorInput
  license: StringQueryOperatorInput
  main: StringQueryOperatorInput
  name: StringQueryOperatorInput
  peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput
}

input SitePluginPluginOptionsFeedsFilterInput {
  output: StringQueryOperatorInput
  query: StringQueryOperatorInput
  title: StringQueryOperatorInput
}

input SitePluginPluginOptionsFeedsFilterListInput {
  elemMatch: SitePluginPluginOptionsFeedsFilterInput
}

input SitePluginPluginOptionsFilterInput {
  checkSupportedExtensions: BooleanQueryOperatorInput
  extensions: StringQueryOperatorInput
  feeds: SitePluginPluginOptionsFeedsFilterListInput
  fonts: SitePluginPluginOptionsFontsFilterListInput
  gatsbyRemarkPlugins: SitePluginPluginOptionsGatsbyRemarkPluginsFilterListInput
  name: StringQueryOperatorInput
  path: StringQueryOperatorInput
  pathCheck: BooleanQueryOperatorInput
  plugins: SitePluginPluginOptionsPluginsFilterListInput
  query: StringQueryOperatorInput
  typeName: StringQueryOperatorInput
}

input SitePluginPluginOptionsFontsFilterInput {
  family: StringQueryOperatorInput
  variants: StringQueryOperatorInput
}

input SitePluginPluginOptionsFontsFilterListInput {
  elemMatch: SitePluginPluginOptionsFontsFilterInput
}

input SitePluginPluginOptionsGatsbyRemarkPluginsFilterInput {
  options: SitePluginPluginOptionsGatsbyRemarkPluginsOptionsFilterInput
  resolve: StringQueryOperatorInput
}

input SitePluginPluginOptionsGatsbyRemarkPluginsFilterListInput {
  elemMatch: SitePluginPluginOptionsGatsbyRemarkPluginsFilterInput
}

input SitePluginPluginOptionsGatsbyRemarkPluginsOptionsFilterInput {
  backgroundColor: StringQueryOperatorInput
  disableBgImage: BooleanQueryOperatorInput
  disableBgImageOnAlpha: BooleanQueryOperatorInput
  linkImagesToOriginal: BooleanQueryOperatorInput
  loading: StringQueryOperatorInput
  markdownCaptions: BooleanQueryOperatorInput
  maxWidth: IntQueryOperatorInput
  pathPrefix: StringQueryOperatorInput
  showCaptions: BooleanQueryOperatorInput
  tracedSVG: BooleanQueryOperatorInput
  withWebp: BooleanQueryOperatorInput
  wrapperStyle: StringQueryOperatorInput
}

input SitePluginPluginOptionsPluginsFilterInput {
  browserAPIs: StringQueryOperatorInput
  id: StringQueryOperatorInput
  name: StringQueryOperatorInput
  pluginFilepath: StringQueryOperatorInput
  resolve: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPluginOptionsPluginsFilterListInput {
  elemMatch: SitePluginPluginOptionsPluginsFilterInput
}

input SitePluginSortInput {
  fields: [SitePluginFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataAuthorFilterInput {
  description: StringQueryOperatorInput
  name: StringQueryOperatorInput
  social: SiteSiteMetadataAuthorSocialFilterInput
}

input SiteSiteMetadataAuthorSocialFilterInput {
  facebook: StringQueryOperatorInput
  github: StringQueryOperatorInput
  instagram: StringQueryOperatorInput
  linkedin: StringQueryOperatorInput
  twitch: StringQueryOperatorInput
  twitter: StringQueryOperatorInput
  youtube: StringQueryOperatorInput
}

input SiteSiteMetadataFilterInput {
  author: SiteSiteMetadataAuthorFilterInput
  description: StringQueryOperatorInput
  footerMenu: SiteSiteMetadataFooterMenuFilterListInput
  menu: SiteSiteMetadataMenuFilterListInput
  search: BooleanQueryOperatorInput
  siteUrl: StringQueryOperatorInput
  title: StringQueryOperatorInput
}

input SiteSiteMetadataFooterMenuFilterInput {
  name: StringQueryOperatorInput
  path: StringQueryOperatorInput
}

input SiteSiteMetadataFooterMenuFilterListInput {
  elemMatch: SiteSiteMetadataFooterMenuFilterInput
}

input SiteSiteMetadataMenuFilterInput {
  name: StringQueryOperatorInput
  path: StringQueryOperatorInput
}

input SiteSiteMetadataMenuFilterListInput {
  elemMatch: SiteSiteMetadataMenuFilterInput
}

input SiteSortInput {
  fields: [SiteFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input StringQueryOperatorInput {
  eq: String
  glob: String
  in: [String]
  ne: String
  nin: [String]
  regex: String
}


"A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON
